basePath: /
definitions:
  domain.Person:
    properties:
      name:
        example: Dmitriy
        type: string
      patronymic:
        example: Petrovich
        type: string
      surname:
        example: Smirnov
        type: string
    type: object
  domain.PersonWithAPIData:
    properties:
      age:
        example: 25
        type: integer
      gender:
        example: male
        type: string
      is_deleted:
        example: false
        type: boolean
      name:
        example: Dmitriy
        type: string
      nationality:
        example: RU
        type: string
      patronymic:
        example: Petrovich
        type: string
      surname:
        example: Smirnov
        type: string
    type: object
host: localhost:8787
info:
  contact: {}
  description: Сервис, получающий ФИО, и обогащающий информацию о нем из открытых
    источников
  title: Identity Forecaster API
  version: "1.0"
paths:
  /create:
    post:
      consumes:
      - application/json
      description: Запрос для добавления информации о новой сущности
      parameters:
      - description: информация о сущности
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/domain.Person'
      responses:
        "202":
          description: Accepted
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      summary: Запрос добавления сущности
      tags:
      - Persons
  /delete/{id}:
    delete:
      description: Запрос для удаления сущности
      parameters:
      - description: id сущности
        example: 1
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      summary: Запрос удаления сущности
      tags:
      - Persons
  /read:
    get:
      description: Запрос для получения сохраненной информации о сущностях с возможностью
        применения фильтров и пагинацией
      parameters:
      - description: номер страницы (1 и больше)
        example: 1
        in: query
        name: page
        type: integer
      - description: максимальное число записей на странице (1 и больше)
        example: 1
        in: query
        name: limit
        type: integer
      - description: нижняя граница возраста (включительно)
        example: 1
        in: query
        name: agegt
        type: integer
      - description: верхняя граница возраста (не включительно)
        example: 1
        in: query
        name: agelt
        type: integer
      - description: конкретный возраст (если заданы границы - перезаписывает их)
        example: 1
        in: query
        name: age
        type: integer
      - description: нижняя граница id (включительно)
        example: 1
        in: query
        name: idgt
        type: integer
      - description: верхняя граница id (не включительно)
        example: 1
        in: query
        name: idlt
        type: integer
      - description: конкретный id (если заданы границы - перезаписывает их)
        example: 1
        in: query
        name: id
        type: integer
      - description: конкретное имя
        example: '"Dmitriy"'
        in: query
        name: name
        type: string
      - description: конкретная фамилия
        example: '"Smirnov"'
        in: query
        name: surname
        type: string
      - description: конкретное отчество
        example: '"Petrovich"'
        in: query
        name: patronymic
        type: string
      - description: конкретный гендер
        example: '"male"'
        in: query
        name: gender
        type: string
      - description: конкретная национальность
        example: '"RU"'
        in: query
        name: nationality
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "204":
          description: No Content
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      summary: Запрос чтения информации о сущностях
      tags:
      - Persons
  /update/{id}:
    put:
      consumes:
      - application/json
      description: Запрос для обновления информации о сущности (кроме id)
      parameters:
      - description: описание сущности
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/domain.PersonWithAPIData'
      - description: id сущности
        example: 1
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "404":
          description: Not Found
        "409":
          description: Conflict
        "500":
          description: Internal Server Error
      summary: Запрос обновления информации о сущности
      tags:
      - Persons
schemes:
- http
swagger: "2.0"
tags:
- description: Группа запросов для управления сущностями
  name: Persons
